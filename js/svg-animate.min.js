var SVGAnimate = (function () {
    function t(t, e) {
      for (var n = 0; n < t.length; n++) e(t[n], n);
    }
    function e(n, a) {
      n instanceof NodeList
        ? t(n, function (t) {
            e(t, a);
          })
        : n.classList
        ? n.classList.add(a)
        : (n.className += " " + a);
    }
    function n(e, a) {
      e instanceof NodeList
        ? t(e, function (t) {
            n(t, a);
          })
        : e.classList
        ? e.classList.remove(a)
        : (e.className || (e.className = ""),
          (e.className = e.className.replace(
            new RegExp("(^|\\b)" + a.split(" ").join("|") + "(\\b|$)", "gi"),
            " "
          )));
    }
    function a(t) {
      var e = document.createElement("template");
      return (e.innerHTML = t), e.content.firstChild;
    }
    function i(t, i) {
      function r(r) {
        var l = r.target.response;
        e(t, "svg-animate");
        var u = t.innerHTML;
        t.innerHTML = "<div class='svg-animate-container'>" + u + "</div>";
        var f = t.parentNode;
        f.appendChild(a('<div class="svg-animate-img hidden">' + l + "</div>")),
          (b = document.querySelectorAll(".svg-animate-img")),
          (D = document.querySelectorAll(".svg-animate-img path")),
          y(f, i),
          (x = o(f)),
          m(x),
          i.animations && s(x, i.animations),
          c(x),
          n(f.querySelector(".svg-animate-img"), "hidden"),
          i.onLoad && i.onLoad(M);
      }
      var l = new XMLHttpRequest();
      l.open("GET", t.src, !0), l.addEventListener("load", r, !1), l.send();
    }
    function r(e) {
      var n = document.querySelectorAll(e.element);
      t(n, function (t) {
        i(t, e);
      });
    }
    function o(t) {
      var a = t.querySelectorAll("path"),
        i = "animated-path";
      e(a, i);
      var r = t.querySelectorAll("defs path");
      return n(r, i), (a = t.querySelectorAll("." + i)), n(a, i), a;
    }
    function s(e, n) {
      var a = JSON.parse(n);
      t(e, function (t, n) {
        var i = a[n];
        for (var r in i)
          if (i.hasOwnProperty(r)) {
            var o = r;
            "animation-delay" === r
              ? (o = "animationDelay")
              : "animation-duration" === r
              ? (o = "animationDuration")
              : "stroke-dasharray" === r
              ? (o = "strokeDasharray")
              : "stroke-dashoffset" === r
              ? (o = "strokeDashoffset")
              : "stroke-width" === r && (o = "strokeWidth"),
              (e[n].style[o] = i[r]);
          }
      });
    }
    function l(t, n, a) {
      setTimeout(function () {
        e(t, "stroked");
      }, n),
        setTimeout(function () {
          e(t, "animated");
        }, a);
    }
    function c(e) {
      t(e, function (t) {
        var e = t.style.animationDuration.split(","),
          n = t.style.animationDelay.split(","),
          a = parseFloat(e[0]) + parseFloat(n[0]),
          i = parseFloat(e[1]) + parseFloat(n[1]),
          r = parseFloat(e[2]) + parseFloat(n[2]),
          o = Math.max.apply(Math, [a, i, r]);
        l(t, 1e3 * i, 1e3 * o);
      });
    }
    function u(t, e) {
      t.style.strokeDasharray = e;
    }
    function f(t, e) {
      t.style.strokeDashoffset = e;
    }
    function m(e) {
      t(e, function (t) {
        var e = Math.ceil(t.getTotalLength());
        u(t, e), f(t, e);
      });
    }
    function d() {
      var e = [];
      return (
        b &&
          t(b, function (n) {
            var a = [],
              i = o(n);
            t(i, function (t) {
              a.push({
                strokeWidth: t.style.strokeWidth,
                stroke: t.style.stroke,
                fill: t.style.fill,
                strokeDasharray: t.style.strokeDasharray,
                strokeDashoffset: t.style.strokeDashoffset,
                animationTimingFunction: t.style.animationTimingFunction,
                animationDelay: t.style.animationDelay,
                animationDuration: t.style.animationDuration,
              });
            }),
              e.push(a);
          }),
        e
      );
    }
    function g(t, e) {
      t.setAttribute("fill", e);
    }
    function v(t, e) {
      (t.style.stroke = e),
        t.setAttribute("stroke", e),
        t.setAttribute("orig-stroke", e);
    }
    function h(t, e) {
      (t.style.strokeWidth = e),
        t.setAttribute("stroke-width", e),
        t.setAttribute("orig-stroke-width", e);
    }
    function y(e, n) {
      var a = e.querySelectorAll("path");
      t(a, function (t) {
        var e = t.style.fill;
        e && (g(t, e), (t.style.fill = null));
        var a = t.getAttribute("stroke")
          ? t.getAttribute("stroke")
          : t.style.stroke;
        "none" === a && (a = ""),
          (a = "" !== a ? a : t.style.fill),
          (a = "" !== a ? a : t.getAttribute("fill")),
          (a = "" !== a ? a : "#afafaf"),
          v(t, a),
          t.style.strokeWidth || h(t, 1),
          t.removeAttribute("style"),
          n.onClick && t.addEventListener("click", n.onClick);
      });
    }
    function p(t) {
      var a = b,
        i = D;
      t && ((a = t), (i = t.querySelectorAll("path"))),
        e(a, C),
        n(i, "animated"),
        n(i, "stroked"),
        c(i);
    }
    function k(t) {
      t ? n(t, C) : n(b, C);
    }
    function A() {
      return b;
    }
    function T() {
      return x;
    }
    function L() {
      return D;
    }
    var b,
      D,
      x,
      C = "svg-animate-img",
      M = 0;
    return {
      getConfig: d,
      startAnimation: p,
      clearAnimation: k,
      changeElementFill: g,
      changeElementStroke: v,
      changeElementStrokeWidth: h,
      getImages: A,
      getPaths: T,
      getAllPaths: L,
      init: r,
    };
  })(),
  SVGAnimateTriangle = (function () {
    function t(t) {
      (T = t),
        (g = t.effect ? t.effect : "rectangle"),
        (v = t.slide_duration ? t.slide_duration : 1e3),
        (h = t.diffusion ? t.diffusion : 400),
        (y = 3e3 + v),
        jQuery(t.element).each(function (e) {
          var n = jQuery(this),
            i = n.attr("src");
          n
            .addClass("svg-animate")
            .wrap("<div class='svg-animate-triangle-container'></div>"),
            jQuery.get(
              i,
              function (i) {
                var r = "animated-triangle-image-" + A++,
                  o = jQuery(i).find("svg").attr("id", r);
                n
                  .parent()
                  .append(
                    '<div class="svg-animate-triangle-img ">' +
                      o[0].outerHTML +
                      "</div>"
                  ),
                  (p = $(".svg-animate-triangle-img")),
                  0 === e && a(),
                  (k = p.length),
                  t.onLoad && t.onLoad();
              },
              "xml"
            );
        });
    }
    function e(t) {
      g = t;
    }
    function n(t) {
      var e = p.eq(t);
      e.removeClass("animated-visible"), e.removeClass("shown");
    }
    function a() {
      var t = p.eq(0);
      t.addClass("shown"),
        setTimeout(function () {
          i(0);
        }, y);
    }
    function i(t) {
      s(),
        setTimeout(function () {
          r(t),
            setTimeout(function () {
              n(t),
                setTimeout(function () {
                  var e = t + 1;
                  e === k && (e = 0);
                  var n = r(e, !0);
                  setTimeout(function () {
                    o(n),
                      setTimeout(function () {
                        i(e);
                      }, y);
                  }, 200),
                    setTimeout(function () {
                      l();
                    }, 2e3);
                }, 250);
            }, 500);
        }, 1e3);
    }
    function r(t, e) {
      var n = p.eq(t),
        a = n.find("path");
      return (
        e && n.addClass("disabled"),
        c(a, t),
        setTimeout(function () {
          n.removeClass("disabled");
        }, 200),
        setTimeout(function () {
          n.addClass("animated-visible");
        }, 500),
        a
      );
    }
    function o(t) {
      t.each(function () {
        d($(this), 0, 0);
      });
    }
    function s() {
      p.addClass("grayscaled");
    }
    function l() {
      p.removeClass("grayscaled");
    }
    function c(t, e) {
      var n, a, i, r;
      t.each(function () {
        if ("center" === g || "rectangle" === g) {
          (n = $(this)), (a = n[0].getBBox());
          try {
            (i = n.parent()[0].getBBox()),
              (r =
                T.center && T.center[e]
                  ? T.center[e]
                  : { x: i.width / 2, y: i.height / 2 });
          } catch (t) {
            r = { x: 500, y: 500 };
          }
          var o = T.margin && T.margin[e] ? T.margin[e].y : 0,
            s = T.margin && T.margin[e] ? T.margin[e].x : 0,
            l = {
              x: -1 * parseInt(a.x) + r.x * f(g) + s + u(),
              y: -1 * parseInt(a.y) + r.y * f(g) + o + u(),
            };
          d(n, l.x, l.y);
        } else "rectangle" === g || d($(this), m(), m(), !0);
      });
    }
    function u() {
      return Math.floor(500 * Math.random());
    }
    function f(t) {
      if ("center" === t) return 1;
      var e = Math.floor(90 * Math.random());
      return e < 30 ? 1.9 : e < 60 ? 1.2 : 0.5;
    }
    function m() {
      var t = Math.floor(1600 * Math.random() - 800);
      return t > 0 ? t + h : t - h;
    }
    function d(t, e, n, a) {
      var i =
        "translate(" +
        e +
        "px, " +
        n +
        "px)" +
        (a ? " rotateZ(270deg)" : " rotateZ(0deg)");
      t.css("-ms-transform", i),
        t.css("-webkit-transform", i),
        t.css("transform", i);
    }
    var g,
      v,
      h,
      y,
      p,
      k = 0,
      A = 0,
      T = {};
    return { init: t, changeEffect: e };
  })();
